// Note: "common.gradle" in the root project contains additional initialization
//   for this project. This initialization is applied in the "build.gradle"
//   of the root project.

targetCompatibility = JavaVersion.VERSION_1_8

dependencies {
    implementation acorusCoordinates
    implementation heartCoordinates
    implementation jcommanderCoordinates
    implementation jme3utilitiesniftyCoordinates

    runtimeOnly 'com.github.nifty-gui:nifty-style-black:1.4.3'
    runtimeOnly 'org.jmonkeyengine:jme3-desktop:' + jme3Version
    runtimeOnly 'org.jmonkeyengine:jme3-lwjgl3:' + jme3Version
    implementation 'org.jmonkeyengine:jme3-terrain:' + jme3Version
    runtimeOnly 'org.jmonkeyengine:jme3-testdata:' + jme3Version

    // SkyExamples doesn't use jme3-jogg nor jme3-plugins
    //  -- they are included solely to avoid warnings from AssetConfig
    runtimeOnly 'org.jmonkeyengine:jme3-jogg:' + jme3Version
    runtimeOnly 'org.jmonkeyengine:jme3-plugins:' + jme3Version

    //implementation "com.github.stephengold:SkyControl:$skycontrolVersion"
    implementation project(':SkyLibrary')
}

// cleanup tasks

clean.dependsOn('cleanDLLs', 'cleanDyLibs', 'cleanLogs', 'cleanSOs', 'cleanWrittenAssets')

task cleanDLLs(type: Delete) {
    delete fileTree(dir: '.', include: '*.dll')
}
task cleanDyLibs(type: Delete) {
    delete fileTree(dir: '.', include: '*.dylib')
}
task cleanLogs(type: Delete) {
    delete fileTree(dir: '.', include: 'hs_err_pid*.log')
}
task cleanSOs(type: Delete) {
    delete fileTree(dir: '.', include: '*.so')
}
task cleanWrittenAssets(type: Delete) {
    delete 'Written Assets'
}

// tasks to run the apps

task runCubeMapExample(type: JavaExec) {
    mainClass = 'jme3utilities.sky.test.CubeMapExample'
}
task runTestGlobeRenderer(type: JavaExec) {
    mainClass = 'jme3utilities.sky.test.TestGlobeRenderer'
}

task debugTestSkyControl(type: JavaExec) {
    debug true
    mainClass = 'jme3utilities.sky.test.TestSkyControl'
}
task runTestSkyControl(type: JavaExec) {
    mainClass = 'jme3utilities.sky.test.TestSkyControl'
}
task runTestSkyControlCyclone(type: JavaExec) {
    args = ['-c']
    mainClass = 'jme3utilities.sky.test.TestSkyControl'
}
task runTestSkyControlShadowFilter(type: JavaExec) {
    args = ['-f']
    mainClass = 'jme3utilities.sky.test.TestSkyControl'
}
task runTestSkyControlNoCubes(type: JavaExec) {
    args = ['-n']
    mainClass = 'jme3utilities.sky.test.TestSkyControl'
}
task runTestSkyControlSingleDome(type: JavaExec) {
    args = ['-s']
    mainClass = 'jme3utilities.sky.test.TestSkyControl'
}
task runTestSkyControlUsage(type: JavaExec) {
    args = ['-u']
    mainClass = 'jme3utilities.sky.test.TestSkyControl'
}
task runTestSkyControlWater(type: JavaExec) {
    args = ['-w']
    mainClass = 'jme3utilities.sky.test.TestSkyControl'
}

task runTestSkyMaterial(type: JavaExec) {
    mainClass = 'jme3utilities.sky.test.TestSkyMaterial'
}
task TestSunAndStars(type: JavaExec) {
    mainClass = 'jme3utilities.sky.test.TestSunAndStars'
}